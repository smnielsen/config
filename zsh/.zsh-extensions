########################################
## Git / Version Handling
########################################
alias rebase='git stash; git fetch; git pull --rebase'
alias push='git stash; git push'
alias git-tag-sort="git tag -l | sort -n -t. -k1,1 -k2,2 -k3,3 -k4,4"
alias git-diff-name="git diff-tree --no-commit-id --name-only -r $1"

########################################
## NPM Helpers
########################################
alias npm-clean='rm -rf node_modules; rm -f package-lock.json'
alias npm-reset='npm-clean; nvm i; npm i'


########################################
## Kubernetes helpers
########################################
# $1 => dev-environment => dev95
# $2 => Service full name => leo-sports-event-service
# $3 => <pod-hash> =>
alias k8s-logs="kubectl logs -n portal-$1 $2-$3 -f"
alias k8s-config="kubectl describe -n portal-$1 configmap $2-config"

########################################
## Java + Gradlew
########################################
alias gw='./gradlew'

########################################
## Docker Helpers
########################################
alias docker-prune='docker-compose down; docker rm -vf $(docker ps -a -q); docker volume rm $(docker volume ls -f dangling=true -q);'

########################################
## Couchbase Helpers
########################################
alias couchbase-create='docker run --name db -p 8091-8094:8091-8094 -p 11210:11210 couchbase:community-4.5.1'
alias couchbase-start='docker start db'

########################################
## GIT helpers
########################################
alias git-update=". $SMN_CONFIG_DIR/scripts/git/git-update-repos.sh"

########################################
## Global functions for terminal
########################################
lookup-port() {
  local port=$1
  sudo lsof -n -i:$port | grep LISTEN
}
# Shortcut to docker exec
# Use dsh <container name> from the shell
# You can optionally provide a command to
# run inside the container, if you do not
# the default command is /bin/sh.
dsh() {
  if [ ! -z "$2" ]; then
    docker exec -it "$1" "${@:2}"
  else
    docker exec -it "$1" /bin/sh
  fi
}

# Fun times
alias ascii-dunno='echo "¯\_(ツ)_/¯"'

# GIT Helpers
parseGitUrl() {
  local url=$1
  local hosting=$(eval "sed 's/.*@\(.*\):.*/\1/' <<< \"$url\"")
  local org=$(eval "sed 's/.*github.com:\(.*\)\/.*/\1/' <<< \"$url\"")
  local repo=$(eval "sed 's/.*\/\(.*\).*/\1/' <<< \"$url\"")
  echo "$GOPATH/src/${hosting}/${org}"
}

parseRepoName() {
  local repo=$(eval "sed 's/.*\/\(.*\).*/\1/' <<< \"$url\"")
  echo "$repo"
}

goclone() {
  local url=$1
  GO_REPO_PATH=$(parseGitUrl $url)
  REPO_NAME=$(parseRepoName $url)
  if [ ! -d $GO_REPO_PATH ]; then 
    mkdir -p ${GO_REPO_PATH}
  fi
  PREV_DIR=$(pwd)

  echo ">> Using \"${GO_REPO_PATH}\""
  cd ${GO_REPO_PATH}
  git clone $url
  cd "${GO_REPO_PATH}${REPO_NAME}"
}

gitclone() {
  local url=$1
  local dir=${2:-private}
  REPO_PATH="$HOME/dev/$dir"
  REPO_NAME=$(parseRepoName $url)
  PREV_DIR=$(pwd)

  echo ">> Using \"${REPO_PATH}\""
  cd ${REPO_PATH}
  git clone $url
  cd "${REPO_PATH}/${REPO_NAME}"
}